package POOwerCoders.vista;

import POOwerCoders.controlador.ControlArticulo;
import POOwerCoders.modelo.Articulo;

import java.util.Scanner;
import java.util.List;

/**
 * VistaArticulos representa la vista del m√≥dulo de gesti√≥n de art√≠culos.
 * Permite al usuario interactuar mediante consola para a√±adir, listar o buscar art√≠culos.
 */
public class VistaArticulos {

    // Controlador que maneja la l√≥gica de negocio relacionada con art√≠culos
    private ControlArticulo controlArticulo = new ControlArticulo();

    // Scanner para leer datos introducidos por el usuario
    private Scanner scanner = new Scanner(System.in);

    /**
     * Muestra el men√∫ principal de gesti√≥n de art√≠culos y ejecuta las opciones seleccionadas.
     */
    public void mostrarMenu() {
        int opcion;
        do {
            // Mostrar opciones disponibles
            System.out.println("\n--- Gesti√≥n de Art√≠culos ---");
            System.out.println("1. A√±adir art√≠culo");
            System.out.println("2. Listar todos los art√≠culos");
            System.out.println("3. Buscar art√≠culos por rango de precio");
            System.out.println("4. Buscar art√≠culos por descripci√≥n");
            System.out.println("0. Volver al men√∫ principal");
            System.out.print("Selecciona una opci√≥n: ");

            // Leer opci√≥n del usuario
            opcion = scanner.nextInt();
            scanner.nextLine(); // Limpiar el buffer

            // Ejecutar acci√≥n seg√∫n la opci√≥n seleccionada
            switch (opcion) {
                case 1 -> agregarArticulo();
                case 2 -> listarArticulos();
                case 3 -> buscarPorPrecio();
                case 4 -> buscarPorDescripcion();
            }
        } while (opcion != 0); // Salir si se elige 0
    }

    /**
     * Permite al usuario agregar un nuevo art√≠culo ingresando los datos por consola.
     */
    private void agregarArticulo() {
        System.out.print("C√≥digo: ");
        String codigo = scanner.nextLine();
        System.out.print("Descripci√≥n: ");
        String descripcion = scanner.nextLine();
        System.out.print("Precio de venta: ");
        double precio = scanner.nextDouble();
        System.out.print("Gastos de env√≠o: ");
        double envio = scanner.nextDouble();
        System.out.print("Tiempo de preparaci√≥n (minutos): ");
        int tiempo = scanner.nextInt();
        scanner.nextLine(); // Limpiar el buffer

        // Crear objeto Articulo y enviarlo al controlador
        Articulo a = new Articulo(codigo, descripcion, precio, envio, tiempo);
        controlArticulo.agregarArticulo(a);

        System.out.println("‚úÖ Art√≠culo a√±adido.");
    }

    /**
     * Muestra todos los art√≠culos registrados en la base de datos.
     */
    private void listarArticulos() {
        List<Articulo> articulos = controlArticulo.listarArticulos();
        System.out.println("\nüì¶ Lista de art√≠culos:");
        for (Articulo a : articulos) {
            System.out.println(a.getCodigo() + " - " + a.getDescripcion());
        }
    }

    /**
     * Permite buscar art√≠culos por un rango de precio (m√≠nimo y m√°ximo).
     */
    private void buscarPorPrecio() {
        System.out.print("Precio m√≠nimo: ");
        double min = scanner.nextDouble();
        System.out.print("Precio m√°ximo: ");
        double max = scanner.nextDouble();
        scanner.nextLine(); // Limpiar el buffer

        // Buscar art√≠culos dentro del rango indicado
        List<Articulo> articulos = controlArticulo.buscarPorRangoPrecio(min, max);
        System.out.println("\nüìã Art√≠culos en ese rango de precio:");
        for (Articulo a : articulos) {
            System.out.printf("%s - %s | Precio: %.2f ‚Ç¨\n", a.getCodigo(), a.getDescripcion(), a.getPrecioVenta());
        }
    }

    /**
     * Permite buscar art√≠culos que contengan una palabra clave en su descripci√≥n.
     */
    private void buscarPorDescripcion() {
        System.out.print("Palabra clave: ");
        String palabra = scanner.nextLine();

        List<Articulo> articulos = controlArticulo.buscarPorDescripcion(palabra);
        System.out.println("\nüìã Art√≠culos que coinciden con la descripci√≥n:");
        for (Articulo a : articulos) {
            System.out.printf("%s - %s\n", a.getCodigo(), a.getDescripcion());
        }
    }

}
